name: Rust

on:
  push: ~
  release:
    types:
      - published

env:
  CARGO_TERM_COLOR: always

permissions:
  checks: write
  contents: read

jobs:
  checks:
    strategy:
      matrix:
        os:
          - windows-2022
          - windows-2025
          - macos-13
          - macos-14
          - macos-15
          - ubuntu-22.04
          - ubuntu-24.04
          - ubuntu-24.04-arm
        include:
          - os: windows-2022
            tests: true
          - tests: false # Keychain requires user interaction, not able to test on CI
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-v1-${{ hashFiles('**/Cargo.lock') }}

      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt,clippy

      - name: Authenticate gh CLI
        run: echo "${{ github.token }}" | gh auth login --with-token --secure-storage --hostname "github.com" --git-protocol "https"

      - name: Run rustfmt
        run: cargo fmt --all --check

      - name: Run clippy
        uses: giraffate/clippy-action@v1
        with:
          clippy_flags: -- -Dwarnings
          reporter: github-pr-check
          fail_on_error: true

      - name: Build
        run: cargo build --all-features

      - name: Run tests
        if: '${{ matrix.tests }}'
        run: cargo test --all-features

  deploy:
    runs-on: ubuntu-24.04
    if: ${{ github.event_name == 'release' }}
    needs:
      - checks
    steps:
      - uses: actions/checkout@v4

      - uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-v1-${{ hashFiles('**/Cargo.toml') }}

      - uses: dtolnay/rust-toolchain@stable

      - name: Log into crates.io
        run: cargo login '${{ secrets.CRATES_IO_TOKEN }}'

      - name: Publish to crates.io
        run: cargo publish --allow-dirty
